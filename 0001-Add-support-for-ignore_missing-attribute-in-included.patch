From 28333ea70e789735105020c695b75702cbd467d3 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <michael.i.doherty@intel.com>
Date: Mon, 24 Apr 2017 16:31:46 +0100
Subject: [PATCH] Add support for ignore_missing attribute in includedir

Rebased variant of the original patch by Dimitri John Ledkov, to support
dbus 1.10.18 and merging the previous stateless directories patch into
one single patch.

A notably change from defaults is ensuring that session.d absence is not
considered fatal, as a minimal image would not have any session.d files
by default.

Signed-off-by: Ikey Doherty <michael.i.doherty@intel.com>
---
 bus/config-parser.c | 56 ++++++++++++++++++++++++++++++++++++++++++-----------
 bus/session.conf.in |  4 ++--
 bus/system.conf.in  |  2 +-
 doc/busconfig.dtd   |  2 ++
 4 files changed, 50 insertions(+), 14 deletions(-)

diff --git a/bus/config-parser.c b/bus/config-parser.c
index d9f6042..a735c65 100644
--- a/bus/config-parser.c
+++ b/bus/config-parser.c
@@ -819,15 +819,41 @@ start_busconfig_child (BusConfigParser   *parser,
     }
   else if (element_type == ELEMENT_INCLUDEDIR)
     {
-      if (!check_no_attributes (parser, "includedir", attribute_names, attribute_values, error))
+
+      Element *e;
+      const char *ignore_missing;
+ 
+      if ((e = push_element (parser, ELEMENT_INCLUDEDIR)) == NULL)
+         {
+           BUS_SET_OOM (error);
+           return FALSE;
+         }
+ 
+      e->d.include.ignore_missing = FALSE;
+
+      if (!locate_attributes (parser, "includedir",
+                              attribute_names,
+                              attribute_values,
+                              error,
+                              "ignore_missing", &ignore_missing,
+                              NULL))
         return FALSE;
 
-      if (push_element (parser, ELEMENT_INCLUDEDIR) == NULL)
+      if (ignore_missing != NULL)
         {
-          BUS_SET_OOM (error);
-          return FALSE;
+          if (strcmp (ignore_missing, "yes") == 0)
+            e->d.include.ignore_missing = TRUE;
+          else if (strcmp (ignore_missing, "no") == 0)
+            e->d.include.ignore_missing = FALSE;
+          else
+            {
+              dbus_set_error (error, DBUS_ERROR_FAILED,
+                              "ignore_missing attribute must have value \"yes\" or \"no\"");
+              return FALSE;
+            }
         }
 
+
       return TRUE;
     }
   else if (element_type == ELEMENT_STANDARD_SESSION_SERVICEDIRS)
@@ -2246,6 +2272,7 @@ servicehelper_path (BusConfigParser   *parser,
 static dbus_bool_t
 include_dir (BusConfigParser   *parser,
              const DBusString  *dirname,
+             dbus_bool_t        ignore_missing,
              DBusError         *error)
 {
   DBusString filename;
@@ -2262,20 +2289,26 @@ include_dir (BusConfigParser   *parser,
 
   retval = FALSE;
   
-  dir = _dbus_directory_open (dirname, error);
 
-  if (dir == NULL)
+  dbus_error_init (&tmp_error);
+
+  dir = _dbus_directory_open (dirname, &tmp_error);
+ 
+   if (dir == NULL)
     {
-      if (dbus_error_has_name (error, DBUS_ERROR_FILE_NOT_FOUND))
+      if (dbus_error_has_name (&tmp_error, DBUS_ERROR_FILE_NOT_FOUND) &&
+          ignore_missing)
         {
-          dbus_error_free (error);
+          dbus_error_free (&tmp_error);
           goto success;
         }
       else
-        goto failed;
+        {
+          dbus_move_error (&tmp_error, error);
+          goto failed;
+        }
     }
 
-  dbus_error_init (&tmp_error);
   while (_dbus_directory_get_next_file (dir, &filename, &tmp_error))
     {
       DBusString full_path;
@@ -2517,7 +2550,8 @@ bus_config_parser_content (BusConfigParser   *parser,
             goto nomem;
           }
         
-        if (!include_dir (parser, &full_path, error))
+        if (!include_dir (parser, &full_path,
+                          e->d.include.ignore_missing, error))
           {
             _dbus_string_free (&full_path);
             return FALSE;
diff --git a/bus/session.conf.in b/bus/session.conf.in
index affa7f1..497433b 100644
--- a/bus/session.conf.in
+++ b/bus/session.conf.in
@@ -40,9 +40,9 @@
 
   <!-- Config files are placed here that among other things, 
        further restrict the above policy for specific services. -->
-  <includedir>session.d</includedir>
+  <includedir ignore_missing="yes">session.d</includedir>
 
-  <includedir>@SYSCONFDIR_FROM_PKGDATADIR@/dbus-1/session.d</includedir>
+  <includedir ignore_missing="yes">@SYSCONFDIR_FROM_PKGDATADIR@/dbus-1/session.d</includedir>
 
   <!-- This is included last so local configuration can override what's 
        in this standard file -->
diff --git a/bus/system.conf.in b/bus/system.conf.in
index 014f67e..f00deda 100644
--- a/bus/system.conf.in
+++ b/bus/system.conf.in
@@ -104,7 +104,7 @@
        holes in the above policy for specific services. -->
   <includedir>system.d</includedir>
 
-  <includedir>@SYSCONFDIR_FROM_PKGDATADIR@/dbus-1/system.d</includedir>
+  <includedir ignore_missing="yes">@SYSCONFDIR_FROM_PKGDATADIR@/dbus-1/system.d</includedir>
 
   <!-- This is included last so local configuration can override what's 
        in this standard file -->
diff --git a/doc/busconfig.dtd b/doc/busconfig.dtd
index 8c5ac33..9e25cc3 100644
--- a/doc/busconfig.dtd
+++ b/doc/busconfig.dtd
@@ -17,6 +17,8 @@
 <!ELEMENT user (#PCDATA)>
 <!ELEMENT listen (#PCDATA)>
 <!ELEMENT includedir (#PCDATA)>
+<!ATTLIST includedir
+          ignore_missing (yes|no) "no">
 <!ELEMENT servicedir (#PCDATA)>
 <!ELEMENT servicehelper (#PCDATA)>
 <!ELEMENT auth (#PCDATA)>
-- 
2.12.2

